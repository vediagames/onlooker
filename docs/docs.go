// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Vedia Games",
            "url": "https://vediagames.com/contact",
            "email": "info@vediagames.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/hello": {
            "get": {
                "description": "Hello World",
                "produces": [
                    "application/json"
                ],
                "summary": "Hello World",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.helloResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "create"
                ],
                "summary": "Creates level object",
                "parameters": [
                    {
                        "description": "Create level",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createLevelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.createLevelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/event/complete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "event",
                    "complete"
                ],
                "summary": "Logs completion of level",
                "parameters": [
                    {
                        "description": "Log completion",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventCompleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/event/death": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "event",
                    "death"
                ],
                "summary": "Logs death of player in level",
                "parameters": [
                    {
                        "description": "Log death",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventDeathRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventDeathResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/event/grappling-hook-usage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "grappling hook",
                    "event"
                ],
                "summary": "Logs usage of grappling hook",
                "parameters": [
                    {
                        "description": "Log grappling hook usage",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventUseGrapplingHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventUseGrapplingHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/events/complete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "events",
                    "complete"
                ],
                "summary": "Logs completion of level",
                "parameters": [
                    {
                        "description": "Log completion",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsCompleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/events/death": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "death",
                    "events"
                ],
                "summary": "Logs death of level",
                "parameters": [
                    {
                        "description": "Log death",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsDeathRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsDeathResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/level/events/grappling-hook-usage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "level",
                    "grappling hook",
                    "events"
                ],
                "summary": "Logs usage of grappling hook",
                "parameters": [
                    {
                        "description": "Log grappling hook usage",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsUseGrapplingHookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.handleEventsUseGrapplingHookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        },
        "/session": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Creates session object",
                "parameters": [
                    {
                        "description": "Create session",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.createSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.httpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.createLevelRequest": {
            "type": "object",
            "properties": {
                "client_time": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "session_uuid": {
                    "type": "string"
                }
            }
        },
        "controller.createLevelResponse": {
            "type": "object",
            "properties": {
                "server_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.createSessionRequest": {
            "type": "object",
            "properties": {
                "client_time": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "controller.createSessionResponse": {
            "type": "object",
            "properties": {
                "server_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventCompleteRequest": {
            "type": "object",
            "properties": {
                "achievement": {
                    "type": "string"
                },
                "client_time": {
                    "type": "string"
                },
                "completion_time_seconds": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventCompleteResponse": {
            "type": "object",
            "properties": {
                "server_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventDeathRequest": {
            "type": "object",
            "properties": {
                "client_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventDeathResponse": {
            "type": "object",
            "properties": {
                "server_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventUseGrapplingHookRequest": {
            "type": "object",
            "properties": {
                "client_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventUseGrapplingHookResponse": {
            "type": "object",
            "properties": {
                "server_time": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controller.handleEventsCompleteRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventCompleteRequest"
                    }
                }
            }
        },
        "controller.handleEventsCompleteResponse": {
            "type": "object",
            "properties": {
                "responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventCompleteResponse"
                    }
                }
            }
        },
        "controller.handleEventsDeathRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventDeathRequest"
                    }
                }
            }
        },
        "controller.handleEventsDeathResponse": {
            "type": "object",
            "properties": {
                "responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventDeathResponse"
                    }
                }
            }
        },
        "controller.handleEventsUseGrapplingHookRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventUseGrapplingHookRequest"
                    }
                }
            }
        },
        "controller.handleEventsUseGrapplingHookResponse": {
            "type": "object",
            "properties": {
                "responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.handleEventUseGrapplingHookResponse"
                    }
                }
            }
        },
        "controller.helloResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Hello world!"
                }
            }
        },
        "controller.httpError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Token to access the API.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Onlooker Rest API",
	Description:      "Lorem something lol. Just todo.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
