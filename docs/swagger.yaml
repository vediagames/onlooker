basePath: /api/v1
definitions:
  controller.createLevelRequest:
    properties:
      client_time:
        type: string
      level:
        type: integer
      session_uuid:
        type: string
    type: object
  controller.createLevelResponse:
    properties:
      server_time:
        type: string
      uuid:
        type: string
    type: object
  controller.createSessionRequest:
    properties:
      client_time:
        type: string
      ip:
        type: string
      timezone:
        type: string
      url:
        type: string
    type: object
  controller.createSessionResponse:
    properties:
      server_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventCompleteRequest:
    properties:
      achievement:
        type: string
      client_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventCompleteResponse:
    properties:
      server_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventDeathRequest:
    properties:
      client_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventDeathResponse:
    properties:
      server_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventUseGrapplingHookRequest:
    properties:
      client_time:
        type: string
      uuid:
        type: string
    type: object
  controller.handleEventUseGrapplingHookResponse:
    properties:
      server_time:
        type: string
      uuid:
        type: string
    type: object
  controller.helloResponse:
    properties:
      message:
        example: Hello world!
        type: string
    type: object
  controller.httpError:
    properties:
      message:
        example: status bad request
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: info@vediagames.com
    name: Vedia Games
    url: https://vediagames.com/contact
  description: Lorem something lol. Just todo.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Onlooker Rest API
  version: 0.1.0
paths:
  /hello:
    get:
      description: Hello World
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.helloResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Hello World
  /level:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create level
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.createLevelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.createLevelResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Creates level object
      tags:
      - level
  /level/event/complete:
    post:
      consumes:
      - application/json
      parameters:
      - description: Log completion
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.handleEventCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.handleEventCompleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Logs completion of level
      tags:
      - level
  /level/event/death:
    post:
      consumes:
      - application/json
      parameters:
      - description: Log death
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.handleEventDeathRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.handleEventDeathResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Logs death of player in level
      tags:
      - level
  /level/event/grappling-hook-usage:
    post:
      consumes:
      - application/json
      parameters:
      - description: Log grappling hook usage
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.handleEventUseGrapplingHookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.handleEventUseGrapplingHookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Logs usage of grappling hook
      tags:
      - level
  /session:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create session
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.createSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.createSessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.httpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controller.httpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.httpError'
      summary: Creates session object
      tags:
      - session
securityDefinitions:
  ApiKeyAuth:
    description: Token to access the API.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
